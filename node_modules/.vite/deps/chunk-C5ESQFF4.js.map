{
  "version": 3,
  "sources": ["../../topojson-client/src/reverse.js", "../../topojson-client/src/identity.js", "../../topojson-client/src/transform.js", "../../topojson-client/src/feature.js", "../../topojson-client/src/stitch.js", "../../topojson-client/src/merge.js"],
  "sourcesContent": ["export default function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n", "export default function(x) {\n  return x;\n}\n", "import identity from \"./identity.js\";\n\nexport default function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}\n", "import reverse from \"./reverse.js\";\nimport transform from \"./transform.js\";\n\nexport default function(topology, o) {\n  if (typeof o === \"string\") o = topology.objects[o];\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature(topology, o); })}\n      : feature(topology, o);\n}\n\nfunction feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nexport function object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n", "export default function(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n", "import {object} from \"./feature.js\";\nimport stitch from \"./stitch.js\";\n\nfunction planarRingArea(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area); // Note: doubled area!\n}\n\nexport default function(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nexport function mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      groups = [];\n\n  objects.forEach(geometry);\n\n  function geometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"Polygon\": extract(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(extract); break;\n    }\n  }\n\n  function extract(polygon) {\n    polygon.forEach(function(ring) {\n      ring.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring) {\n    return planarRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]);\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var group = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      groups.push(group);\n      while (polygon = neighbors.pop()) {\n        group.push(polygon);\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: groups.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitch(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    }).filter(function(arcs) {\n      return arcs.length > 0;\n    })\n  };\n}\n"],
  "mappings": ";AAAe,SAAR,gBAAiB,OAAO,GAAG;AAChC,MAAI,GAAG,IAAI,MAAM,QAAQ,IAAI,IAAI;AACjC,SAAO,IAAI,EAAE,EAAG,KAAI,MAAM,CAAC,GAAG,MAAM,GAAG,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI;AAClE;;;ACHe,SAAR,iBAAiB,GAAG;AACzB,SAAO;AACT;;;ACAe,SAAR,kBAAiB,WAAW;AACjC,MAAI,aAAa,KAAM,QAAO;AAC9B,MAAI,IACA,IACA,KAAK,UAAU,MAAM,CAAC,GACtB,KAAK,UAAU,MAAM,CAAC,GACtB,KAAK,UAAU,UAAU,CAAC,GAC1B,KAAK,UAAU,UAAU,CAAC;AAC9B,SAAO,SAAS,OAAO,GAAG;AACxB,QAAI,CAAC,EAAG,MAAK,KAAK;AAClB,QAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,SAAS,IAAI,MAAM,CAAC;AACjD,WAAO,CAAC,KAAK,MAAM,MAAM,CAAC,KAAK,KAAK;AACpC,WAAO,CAAC,KAAK,MAAM,MAAM,CAAC,KAAK,KAAK;AACpC,WAAO,IAAI,EAAG,QAAO,CAAC,IAAI,MAAM,CAAC,GAAG,EAAE;AACtC,WAAO;AAAA,EACT;AACF;;;ACfe,SAAR,gBAAiB,UAAU,GAAG;AACnC,MAAI,OAAO,MAAM,SAAU,KAAI,SAAS,QAAQ,CAAC;AACjD,SAAO,EAAE,SAAS,uBACZ,EAAC,MAAM,qBAAqB,UAAU,EAAE,WAAW,IAAI,SAASA,IAAG;AAAE,WAAO,QAAQ,UAAUA,EAAC;AAAA,EAAG,CAAC,EAAC,IACpG,QAAQ,UAAU,CAAC;AAC3B;AAEA,SAAS,QAAQ,UAAU,GAAG;AAC5B,MAAI,KAAK,EAAE,IACP,OAAO,EAAE,MACT,aAAa,EAAE,cAAc,OAAO,CAAC,IAAI,EAAE,YAC3C,WAAW,OAAO,UAAU,CAAC;AACjC,SAAO,MAAM,QAAQ,QAAQ,OAAO,EAAC,MAAM,WAAW,YAAwB,SAAkB,IAC1F,QAAQ,OAAO,EAAC,MAAM,WAAW,IAAQ,YAAwB,SAAkB,IACnF,EAAC,MAAM,WAAW,IAAQ,MAAY,YAAwB,SAAkB;AACxF;AAEO,SAAS,OAAO,UAAU,GAAG;AAClC,MAAI,iBAAiB,kBAAU,SAAS,SAAS,GAC7C,OAAO,SAAS;AAEpB,WAAS,IAAI,GAAG,QAAQ;AACtB,QAAI,OAAO,OAAQ,QAAO,IAAI;AAC9B,aAAS,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,EAAE,QAAQ,IAAI,GAAG,EAAE,GAAG;AAClE,aAAO,KAAK,eAAe,EAAE,CAAC,GAAG,CAAC,CAAC;AAAA,IACrC;AACA,QAAI,IAAI,EAAG,iBAAQ,QAAQ,CAAC;AAAA,EAC9B;AAEA,WAAS,MAAM,GAAG;AAChB,WAAO,eAAe,CAAC;AAAA,EACzB;AAEA,WAAS,KAAKC,OAAM;AAClB,QAAI,SAAS,CAAC;AACd,aAAS,IAAI,GAAG,IAAIA,MAAK,QAAQ,IAAI,GAAG,EAAE,EAAG,KAAIA,MAAK,CAAC,GAAG,MAAM;AAChE,QAAI,OAAO,SAAS,EAAG,QAAO,KAAK,OAAO,CAAC,CAAC;AAC5C,WAAO;AAAA,EACT;AAEA,WAAS,KAAKA,OAAM;AAClB,QAAI,SAAS,KAAKA,KAAI;AACtB,WAAO,OAAO,SAAS,EAAG,QAAO,KAAK,OAAO,CAAC,CAAC;AAC/C,WAAO;AAAA,EACT;AAEA,WAAS,QAAQA,OAAM;AACrB,WAAOA,MAAK,IAAI,IAAI;AAAA,EACtB;AAEA,WAAS,SAASD,IAAG;AACnB,QAAI,OAAOA,GAAE,MAAM;AACnB,YAAQ,MAAM;AAAA,MACZ,KAAK;AAAsB,eAAO,EAAC,MAAY,YAAYA,GAAE,WAAW,IAAI,QAAQ,EAAC;AAAA,MACrF,KAAK;AAAS,sBAAc,MAAMA,GAAE,WAAW;AAAG;AAAA,MAClD,KAAK;AAAc,sBAAcA,GAAE,YAAY,IAAI,KAAK;AAAG;AAAA,MAC3D,KAAK;AAAc,sBAAc,KAAKA,GAAE,IAAI;AAAG;AAAA,MAC/C,KAAK;AAAmB,sBAAcA,GAAE,KAAK,IAAI,IAAI;AAAG;AAAA,MACxD,KAAK;AAAW,sBAAc,QAAQA,GAAE,IAAI;AAAG;AAAA,MAC/C,KAAK;AAAgB,sBAAcA,GAAE,KAAK,IAAI,OAAO;AAAG;AAAA,MACxD;AAAS,eAAO;AAAA,IAClB;AACA,WAAO,EAAC,MAAY,YAAwB;AAAA,EAC9C;AAEA,SAAO,SAAS,CAAC;AACnB;;;ACrEe,SAAR,eAAiB,UAAU,MAAM;AACtC,MAAI,eAAe,CAAC,GAChB,kBAAkB,CAAC,GACnB,gBAAgB,CAAC,GACjB,YAAY,CAAC,GACb,aAAa;AAGjB,OAAK,QAAQ,SAAS,GAAG,GAAG;AAC1B,QAAI,MAAM,SAAS,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG;AACzC,QAAI,IAAI,SAAS,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG;AAC9C,UAAI,KAAK,EAAE,UAAU,GAAG,KAAK,UAAU,IAAI,GAAG,KAAK,CAAC,IAAI;AAAA,IAC1D;AAAA,EACF,CAAC;AAED,OAAK,QAAQ,SAAS,GAAG;AACvB,QAAI,IAAI,KAAK,CAAC,GACV,QAAQ,EAAE,CAAC,GACX,MAAM,EAAE,CAAC,GACT,GAAG;AAEP,QAAI,IAAI,cAAc,KAAK,GAAG;AAC5B,aAAO,cAAc,EAAE,GAAG;AAC1B,QAAE,KAAK,CAAC;AACR,QAAE,MAAM;AACR,UAAI,IAAI,gBAAgB,GAAG,GAAG;AAC5B,eAAO,gBAAgB,EAAE,KAAK;AAC9B,YAAI,KAAK,MAAM,IAAI,IAAI,EAAE,OAAO,CAAC;AACjC,wBAAgB,GAAG,QAAQ,EAAE,KAAK,IAAI,cAAc,GAAG,MAAM,EAAE,GAAG,IAAI;AAAA,MACxE,OAAO;AACL,wBAAgB,EAAE,KAAK,IAAI,cAAc,EAAE,GAAG,IAAI;AAAA,MACpD;AAAA,IACF,WAAW,IAAI,gBAAgB,GAAG,GAAG;AACnC,aAAO,gBAAgB,EAAE,KAAK;AAC9B,QAAE,QAAQ,CAAC;AACX,QAAE,QAAQ;AACV,UAAI,IAAI,cAAc,KAAK,GAAG;AAC5B,eAAO,cAAc,EAAE,GAAG;AAC1B,YAAI,KAAK,MAAM,IAAI,IAAI,EAAE,OAAO,CAAC;AACjC,wBAAgB,GAAG,QAAQ,EAAE,KAAK,IAAI,cAAc,GAAG,MAAM,EAAE,GAAG,IAAI;AAAA,MACxE,OAAO;AACL,wBAAgB,EAAE,KAAK,IAAI,cAAc,EAAE,GAAG,IAAI;AAAA,MACpD;AAAA,IACF,OAAO;AACL,UAAI,CAAC,CAAC;AACN,sBAAgB,EAAE,QAAQ,KAAK,IAAI,cAAc,EAAE,MAAM,GAAG,IAAI;AAAA,IAClE;AAAA,EACF,CAAC;AAED,WAAS,KAAK,GAAG;AACf,QAAI,MAAM,SAAS,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG;AACtD,QAAI,SAAS,UAAW,MAAK,CAAC,GAAG,CAAC,GAAG,IAAI,QAAQ,SAAS,IAAI;AAAE,SAAG,CAAC,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,QAC5F,MAAK,IAAI,IAAI,SAAS,CAAC;AAC5B,WAAO,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE;AAAA,EACnC;AAEA,WAAS,MAAME,gBAAeC,kBAAiB;AAC7C,aAAS,KAAKD,gBAAe;AAC3B,UAAI,IAAIA,eAAc,CAAC;AACvB,aAAOC,iBAAgB,EAAE,KAAK;AAC9B,aAAO,EAAE;AACT,aAAO,EAAE;AACT,QAAE,QAAQ,SAAS,GAAG;AAAE,qBAAa,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI;AAAA,MAAG,CAAC;AAC3D,gBAAU,KAAK,CAAC;AAAA,IAClB;AAAA,EACF;AAEA,QAAM,eAAe,eAAe;AACpC,QAAM,iBAAiB,aAAa;AACpC,OAAK,QAAQ,SAAS,GAAG;AAAE,QAAI,CAAC,aAAa,IAAI,IAAI,CAAC,IAAI,CAAC,EAAG,WAAU,KAAK,CAAC,CAAC,CAAC;AAAA,EAAG,CAAC;AAEpF,SAAO;AACT;;;ACrEA,SAAS,eAAe,MAAM;AAC5B,MAAI,IAAI,IAAI,IAAI,KAAK,QAAQ,GAAG,IAAI,KAAK,IAAI,CAAC,GAAG,OAAO;AACxD,SAAO,EAAE,IAAI,EAAG,KAAI,GAAG,IAAI,KAAK,CAAC,GAAG,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACpE,SAAO,KAAK,IAAI,IAAI;AACtB;AAEe,SAAR,cAAiB,UAAU;AAChC,SAAO,OAAO,UAAU,UAAU,MAAM,MAAM,SAAS,CAAC;AAC1D;AAEO,SAAS,UAAU,UAAU,SAAS;AAC3C,MAAI,gBAAgB,CAAC,GACjB,WAAW,CAAC,GACZ,SAAS,CAAC;AAEd,UAAQ,QAAQ,QAAQ;AAExB,WAAS,SAAS,GAAG;AACnB,YAAQ,EAAE,MAAM;AAAA,MACd,KAAK;AAAsB,UAAE,WAAW,QAAQ,QAAQ;AAAG;AAAA,MAC3D,KAAK;AAAW,gBAAQ,EAAE,IAAI;AAAG;AAAA,MACjC,KAAK;AAAgB,UAAE,KAAK,QAAQ,OAAO;AAAG;AAAA,IAChD;AAAA,EACF;AAEA,WAAS,QAAQ,SAAS;AACxB,YAAQ,QAAQ,SAAS,MAAM;AAC7B,WAAK,QAAQ,SAAS,KAAK;AACzB,SAAC,cAAc,MAAM,MAAM,IAAI,CAAC,MAAM,GAAG,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,KAAK,OAAO;AAAA,MACvF,CAAC;AAAA,IACH,CAAC;AACD,aAAS,KAAK,OAAO;AAAA,EACvB;AAEA,WAAS,KAAK,MAAM;AAClB,WAAO,eAAe,OAAO,UAAU,EAAC,MAAM,WAAW,MAAM,CAAC,IAAI,EAAC,CAAC,EAAE,YAAY,CAAC,CAAC;AAAA,EACxF;AAEA,WAAS,QAAQ,SAAS,SAAS;AACjC,QAAI,CAAC,QAAQ,GAAG;AACd,UAAI,QAAQ,CAAC,GACT,YAAY,CAAC,OAAO;AACxB,cAAQ,IAAI;AACZ,aAAO,KAAK,KAAK;AACjB,aAAO,UAAU,UAAU,IAAI,GAAG;AAChC,cAAM,KAAK,OAAO;AAClB,gBAAQ,QAAQ,SAAS,MAAM;AAC7B,eAAK,QAAQ,SAAS,KAAK;AACzB,0BAAc,MAAM,IAAI,CAAC,MAAM,GAAG,EAAE,QAAQ,SAASC,UAAS;AAC5D,kBAAI,CAACA,SAAQ,GAAG;AACd,gBAAAA,SAAQ,IAAI;AACZ,0BAAU,KAAKA,QAAO;AAAA,cACxB;AAAA,YACF,CAAC;AAAA,UACH,CAAC;AAAA,QACH,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF,CAAC;AAED,WAAS,QAAQ,SAAS,SAAS;AACjC,WAAO,QAAQ;AAAA,EACjB,CAAC;AAED,SAAO;AAAA,IACL,MAAM;AAAA,IACN,MAAM,OAAO,IAAI,SAASC,WAAU;AAClC,UAAI,OAAO,CAAC,GAAG;AAGf,MAAAA,UAAS,QAAQ,SAAS,SAAS;AACjC,gBAAQ,QAAQ,SAAS,MAAM;AAC7B,eAAK,QAAQ,SAAS,KAAK;AACzB,gBAAI,cAAc,MAAM,IAAI,CAAC,MAAM,GAAG,EAAE,SAAS,GAAG;AAClD,mBAAK,KAAK,GAAG;AAAA,YACf;AAAA,UACF,CAAC;AAAA,QACH,CAAC;AAAA,MACH,CAAC;AAGD,aAAO,eAAO,UAAU,IAAI;AAK5B,WAAK,IAAI,KAAK,UAAU,GAAG;AACzB,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACpD,eAAK,KAAK,KAAK,KAAK,CAAC,CAAC,KAAK,GAAG;AAC5B,gBAAI,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,GAAG,IAAI;AAAA,UACnD;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT,CAAC,EAAE,OAAO,SAAS,MAAM;AACvB,aAAO,KAAK,SAAS;AAAA,IACvB,CAAC;AAAA,EACH;AACF;",
  "names": ["o", "arcs", "fragmentByEnd", "fragmentByStart", "polygon", "polygons"]
}
